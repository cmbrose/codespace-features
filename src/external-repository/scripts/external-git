#!/usr/bin/env bash
set -e

SUBCOMMAND=$1

case "${SUBCOMMAND}" in
    "clone")
        exec /bin/bash "/usr/local/external-repository-feature/clone.sh"
        ;;
    "config")
        exec /bin/bash "/usr/local/external-repository-feature/setup-user.sh"
        ;;
    "setup-user")
        exec /bin/bash "/usr/local/external-repository-feature/setup-user.sh"
        ;;
    "prebuild")
        source /usr/local/external-repository-feature/variables.sh
        if [ "${EXT_GIT_OIDC_PREBUILD}" == "true" ]; then
          # Get token using OIDC
            if [ "$2" = "get" ]; then
                FIC=$(curl -s -H "Authorization: bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" | jq -r '.value')
                if az login --service-principal -u ${EXT_GIT_AZURE_CLIENT_ID} --tenant ${EXT_GIT_AZURE_TENANT_ID} --federated-token "${FIC}" --allow-no-subscriptions --only-show-errors &>/dev/null; then
                    ADO_TOKEN=$(az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 | jq -r .accessToken)
                else
                    ADO_TOKEN="ERROR"
                fi
                echo "username=${EXT_GIT_USERNAME}"
                echo "password=${ADO_TOKEN}"
            else
               # This allows the prebuild command to be called and just get the token on stdout
                echo $(az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 | jq -r .accessToken)
            fi
        else
            # Get token using PAT
            if [ "$2" = "get" ]; then
                PREBUILD_PAT=${!EXT_GIT_PREBUILD_PAT}
                echo "username=${EXT_GIT_USERNAME}"
                echo "password=${PREBUILD_PAT}"
            fi
        fi
        exit 0
        ;;
    "helper")
        if [ "$2" = "get" ]; then
            source /usr/local/external-repository-feature/variables.sh
            USER_PAT=${!EXT_GIT_USER_PAT}
            echo "username=${EXT_GIT_USERNAME}"
            echo "password=${USER_PAT}"
        fi
        exit 0
        ;;
    "ado-helper")
        if [ "$2" = "get" ]; then
            # Check if ~/ado-auth-helper exists and run it
            if [ -f ~/ado-auth-helper ]; then
                ~/ado-auth-helper get
            else
                # Force a failure if the helper is not available
                echo "username=helper"
                echo "password=notinstalled"
            fi
        fi
        exit 0
        ;;        
    *)
        echo "devcontainer.json example:"
        echo "  "\"onCreateCommand\": \"external-git clone\",""
        echo "  "\"postStartCommand\": \"external-git config\",""
        exit 0
        ;;
esac
exit $?